1.	CONST_MAX_INT : 32767
2.	CONST_MIN_INT : -32768
3.	DATA_STR_CONST_SPACE :  
4.	DATA_STR_ERR_ACCESS_VIOLATION : Access Violation
5.	DATA_STR_ERR_ZERO_DIV : Illegal Division By Zero
6.	DATA_STR_ERR_INVALID_POINTER : Invalid Pointer Dereference
7.	CONST_SPACE : DATA_STR_CONST_SPACE
8.	ERR_ACCESS_VIOLATION : DATA_STR_ERR_ACCESS_VIOLATION
9.	ERR_ZERO_DIV : DATA_STR_ERR_ZERO_DIV
10.	ERR_INVALID_POINTER : DATA_STR_ERR_INVALID_POINTER
11.	jmp main
12.  FUNC_LABEL_BubbleSort:
13.	$sp = addi $sp, -4
14.	0($sp) = $ra
15.	$sp = addi $sp, -4
16.	0($sp) = $fp
17.	$fp = move $sp
18.	$sp = addi $sp, -20
19.	$t0 = 0
20.	-4($fp) = $t0
21.	$t1 = 0
22.	-8($fp) = $t1
23.	$t2 = 32767
24.	-12($fp) = $t2
25.	$t3 = -1
26.	-16($fp) = $t3
27.	$t4 = 0
28.	-20($fp) = $t4
29.  WHILE_TRUE1:
30.	$t6 = -4($fp)
31.	$t7 = 12($fp)
32.	$t5 = lt $t6, $t7
33.	jifz $t5, WHILE_FALSE1
34.	$t8 = -4($fp)
35.	-8($fp) = $t8
36.	$t9 = 32767
37.	-12($fp) = $t9
38.  WHILE_TRUE2:
39.	$t11 = -8($fp)
40.	$t12 = 12($fp)
41.	$t10 = lt $t11, $t12
42.	jifz $t10, WHILE_FALSE2
43.	$t14 = 8($fp)
44.	$t15 = -8($fp)
45.	$t16 = array_access $t14[ $t15 ]
46.	$t17 = -12($fp)
47.	$t13 = lt $t16, $t17
48.	jifz $t13, IF_FALSE3
49.	$t18 = 8($fp)
50.	$t19 = -8($fp)
51.	$t20 = array_access $t18[ $t19 ]
52.	-12($fp) = $t20
53.	$t21 = -8($fp)
54.	-16($fp) = $t21
55.  IF_FALSE3:
56.	$t23 = -8($fp)
57.	$t24 = 1
58.	$t22 = add $t23, $t24
59.	jilt $t22, -32768, UNDERFLOW_4
60.	jigt $t22, 32767, OVERFLOW_4
61.	jmp INBOUNDS_4
62.  UNDERFLOW_4:
63.	$t22 = -32768
64.	jmp INBOUNDS_4
65.  OVERFLOW_4:
66.	$t22 = 32767
67.  INBOUNDS_4:
68.	-8($fp) = $t22
69.	jmp WHILE_TRUE2
70.  WHILE_FALSE2:
71.	$t25 = 8($fp)
72.	$t26 = -4($fp)
73.	$t27 = array_access $t25[ $t26 ]
74.	-20($fp) = $t27
75.	$t28 = -12($fp)
76.	$t29 = 8($fp)
77.	$t30 = -4($fp)
78.	array_set $t29, $t30, $t28
79.	$t31 = -20($fp)
80.	$t32 = 8($fp)
81.	$t33 = -16($fp)
82.	array_set $t32, $t33, $t31
83.	$t35 = -4($fp)
84.	$t36 = 1
85.	$t34 = add $t35, $t36
86.	jilt $t34, -32768, UNDERFLOW_5
87.	jigt $t34, 32767, OVERFLOW_5
88.	jmp INBOUNDS_5
89.  UNDERFLOW_5:
90.	$t34 = -32768
91.	jmp INBOUNDS_5
92.  OVERFLOW_5:
93.	$t34 = 32767
94.  INBOUNDS_5:
95.	-4($fp) = $t34
96.	jmp WHILE_TRUE1
97.  WHILE_FALSE1:
98.	return 
99.  FUNC_LABEL_main:
100.	$sp = addi $sp, -4
101.	0($sp) = $ra
102.	$sp = addi $sp, -4
103.	0($sp) = $fp
104.	$fp = move $sp
105.	$sp = addi $sp, -8
106.	$t38 = 7
107.	$t37 = new_array $t38
108.	-4($fp) = $t37
109.	$t39 = 34
110.	$t40 = -4($fp)
111.	$t41 = 0
112.	array_set $t40, $t41, $t39
113.	$t42 = 12
114.	$t43 = -4($fp)
115.	$t44 = 1
116.	array_set $t43, $t44, $t42
117.	$t45 = -600
118.	$t46 = -4($fp)
119.	$t47 = 2
120.	array_set $t46, $t47, $t45
121.	$t48 = -400
122.	$t49 = -4($fp)
123.	$t50 = 3
124.	array_set $t49, $t50, $t48
125.	$t51 = 70
126.	$t52 = -4($fp)
127.	$t53 = 4
128.	array_set $t52, $t53, $t51
129.	$t54 = 30
130.	$t55 = -4($fp)
131.	$t56 = 5
132.	array_set $t55, $t56, $t54
133.	$t57 = -580
134.	$t58 = -4($fp)
135.	$t59 = 6
136.	array_set $t58, $t59, $t57
137.	$t60 = -4($fp)
138.	$t61 = 7
139.	$t62 = call BubbleSort $t60, $t61
140.	$t63 = 0
141.	-8($fp) = $t63
142.  WHILE_TRUE6:
143.	$t65 = -8($fp)
144.	$t66 = 7
145.	$t64 = lt $t65, $t66
146.	jifz $t64, WHILE_FALSE6
147.	$t67 = -4($fp)
148.	$t68 = -8($fp)
149.	$t69 = array_access $t67[ $t68 ]
150.	$t70 = call PrintInt $t69
151.	$t72 = -8($fp)
152.	$t73 = 1
153.	$t71 = add $t72, $t73
154.	jilt $t71, -32768, UNDERFLOW_7
155.	jigt $t71, 32767, OVERFLOW_7
156.	jmp INBOUNDS_7
157.  UNDERFLOW_7:
158.	$t71 = -32768
159.	jmp INBOUNDS_7
160.  OVERFLOW_7:
161.	$t71 = 32767
162.  INBOUNDS_7:
163.	-8($fp) = $t71
164.	jmp WHILE_TRUE6
165.  WHILE_FALSE6:
166.	return 
167.  main:
168.	jal FUNC_LABEL_main
